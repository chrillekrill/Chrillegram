@using ChrilleGram.UI.Data.Services;
@inject NavigationManager NavManager
@inject UserService UserService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        @if(NavManager.Uri.ToLower().Contains("fullimage"))
        {
            
        }
        <a class="navbar-brand" href="">@UserName</a>
        <button class="btn btn-success" @onclick="AddImagePage">
            <svg xmlns="http://www.w3.org/2000/svg" fill="white" class="bi bi-plus" viewBox="0 0 16 16" style="width: 16px; height: 16px; transform: scale(2);">
                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"></path>
            </svg>
        </button>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="Logout">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="index">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private bool loggedIn;

    private string userName;

    private string UserName
    {
        get => userName;
        set
        {
            userName = value;
            StateHasChanged(); // Trigger a UI update
        }
    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void AddImagePage()
    {
        NavManager.NavigateTo("/addImage");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void Logout()
    {
        SecureStorage.Default.Remove("jwt");

        NavManager.NavigateTo("/");
    }

    protected override async void OnInitialized()
    {
        var jwt = await SecureStorage.Default.GetAsync("jwt");

        if (string.IsNullOrEmpty(jwt))
        {
            loggedIn = false;
        }
        else
        {
            loggedIn = true;
            var name = await UserService.GetUsername(jwt);
            UserName = name;
        }
    }
}
